package edu.upc.as.data.speedment.showscom.public_.local.impl;

import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import edu.upc.as.data.speedment.showscom.public_.local.Local;
import edu.upc.as.data.speedment.showscom.public_.representacio.Representacio;
import edu.upc.as.data.speedment.showscom.public_.seient.Seient;

import javax.annotation.Generated;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.stream.Stream;

/**
 * An implementation representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@2c42abda.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public final class LocalImpl extends AbstractBaseEntity<Local> implements Local {
    
    private String nom;
    private String adreA;
    
    LocalImpl(Speedment speedment) {
        super(speedment);
    }
    
    public LocalImpl(Speedment speedment, final Local local) {
        super(speedment);
        setNom(local.getNom());
        setAdreA(local.getAdreA());
    }
    
    @Override
    public String getNom() {
        return nom;
    }
    
    @Override
    public final LocalImpl setNom(String nom) {
        this.nom = nom;
        return this;
    }
    
    @Override
    public String getAdreA() {
        return adreA;
    }
    
    @Override
    public final LocalImpl setAdreA(String adreA) {
        this.adreA = adreA;
        return this;
    }
    
    @Override
    public Stream<Representacio> findRepresentaciosByNomlocal() {
        return managerOf_(Representacio.class)
                .stream().filter(Representacio.NOMLOCAL.equal(this.getNom()));
    }
    
    @Override
    public Stream<Seient> findSeientsByNomlocal() {
        return managerOf_(Seient.class)
                .stream().filter(Seient.NOMLOCAL.equal(this.getNom()));
    }
    
    @Override
    public Stream<Seient> findSeients() {
        return findSeientsByNomlocal();
    }
    
    @Override
    public Stream<Representacio> findRepresentacios() {
        return findRepresentaciosByNomlocal();
    }
    
    @Override
    public Local copy() {
        return new LocalImpl(getSpeedment_(), this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("nom = "+Objects.toString(getNom()));
        sj.add("adreA = "+Objects.toString(getAdreA()));
        return "LocalImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Local)) { return false; }
        @SuppressWarnings("unchecked")
        final Local thatLocal = (Local)that;
        if (!Objects.equals(this.getNom(), thatLocal.getNom())) {return false; }
        if (!Objects.equals(this.getAdreA(), thatLocal.getAdreA())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getNom());
        hash = 31 * hash + Objects.hashCode(getAdreA());
        return hash;
    }
    
    @Override
    public Class<Local> getEntityClass_() {
        return Local.class;
    }
}