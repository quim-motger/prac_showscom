package edu.upc.as.data.speedment.showscom.public_.estrena.impl;

import com.speedment.Speedment;
import com.speedment.exception.SpeedmentException;
import com.speedment.internal.core.code.AbstractBaseEntity;
import edu.upc.as.data.speedment.showscom.public_.estrena.Estrena;
import edu.upc.as.data.speedment.showscom.public_.representacio.Representacio;

import javax.annotation.Generated;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * An implementation representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@516db050.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public final class EstrenaImpl extends AbstractBaseEntity<Estrena> implements Estrena {
    
    private String nomlocal;
    private String sessio;
    private Integer recarrec;
    
    EstrenaImpl(Speedment speedment) {
        super(speedment);
    }
    
    public EstrenaImpl(Speedment speedment, final Estrena estrena) {
        super(speedment);
        setNomlocal(estrena.getNomlocal());
        setSessio(estrena.getSessio());
        setRecarrec(estrena.getRecarrec());
    }
    
    @Override
    public String getNomlocal() {
        return nomlocal;
    }
    
    @Override
    public final EstrenaImpl setNomlocal(String nomlocal) {
        this.nomlocal = nomlocal;
        return this;
    }
    
    @Override
    public String getSessio() {
        return sessio;
    }
    
    @Override
    public final EstrenaImpl setSessio(String sessio) {
        this.sessio = sessio;
        return this;
    }
    
    @Override
    public Integer getRecarrec() {
        return recarrec;
    }
    
    @Override
    public final EstrenaImpl setRecarrec(Integer recarrec) {
        this.recarrec = recarrec;
        return this;
    }
    
    @Override
    public Representacio getRepresentacio() {
        return managerOf_(Representacio.class).stream().filter(Representacio.NOMLOCAL.equal(getNomlocal()))
                .filter(Representacio.SESSIO.equal(getSessio()))
                .findFirst()
            .orElseThrow(() -> new SpeedmentException(
                    "Foreign key constraint error. "
            ));
            
    }
    
    @Override
    public Estrena copy() {
        return new EstrenaImpl(getSpeedment_(), this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("nomlocal = "+Objects.toString(getNomlocal()));
        sj.add("sessio = "+Objects.toString(getSessio()));
        sj.add("recarrec = "+Objects.toString(getRecarrec()));
        return "EstrenaImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Estrena)) { return false; }
        @SuppressWarnings("unchecked")
        final Estrena thatEstrena = (Estrena)that;
        if (!Objects.equals(this.getNomlocal(), thatEstrena.getNomlocal())) {return false; }
        if (!Objects.equals(this.getSessio(), thatEstrena.getSessio())) {return false; }
        if (!Objects.equals(this.getRecarrec(), thatEstrena.getRecarrec())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getNomlocal());
        hash = 31 * hash + Objects.hashCode(getSessio());
        hash = 31 * hash + Objects.hashCode(getRecarrec());
        return hash;
    }
    
    @Override
    public Class<Estrena> getEntityClass_() {
        return Estrena.class;
    }
}