package edu.upc.as.data.speedment.showscom.public_.sessio.impl;

import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import edu.upc.as.data.speedment.showscom.public_.representacio.Representacio;
import edu.upc.as.data.speedment.showscom.public_.sessio.Sessio;

import javax.annotation.Generated;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.stream.Stream;

/**
 * An implementation representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@5eada0c6.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public final class SessioImpl extends AbstractBaseEntity<Sessio> implements Sessio {
    
    private String sessio;
    
    SessioImpl(Speedment speedment) {
        super(speedment);
    }
    
    public SessioImpl(Speedment speedment, final Sessio sessio) {
        super(speedment);
        setSessio(sessio.getSessio());
    }
    
    @Override
    public String getSessio() {
        return sessio;
    }
    
    @Override
    public final SessioImpl setSessio(String sessio) {
        this.sessio = sessio;
        return this;
    }
    
    @Override
    public Stream<Representacio> findRepresentaciosBySessio() {
        return managerOf_(Representacio.class)
                .stream().filter(Representacio.SESSIO.equal(this.getSessio()));
    }
    
    @Override
    public Stream<Representacio> findRepresentacios() {
        return findRepresentaciosBySessio();
    }
    
    @Override
    public Sessio copy() {
        return new SessioImpl(getSpeedment_(), this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("sessio = "+Objects.toString(getSessio()));
        return "SessioImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Sessio)) { return false; }
        @SuppressWarnings("unchecked")
        final Sessio thatSessio = (Sessio)that;
        if (!Objects.equals(this.getSessio(), thatSessio.getSessio())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getSessio());
        return hash;
    }
    
    @Override
    public Class<Sessio> getEntityClass_() {
        return Sessio.class;
    }
}