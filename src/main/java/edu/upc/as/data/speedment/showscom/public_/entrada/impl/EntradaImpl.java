package edu.upc.as.data.speedment.showscom.public_.entrada.impl;

import com.speedment.Speedment;
import com.speedment.exception.SpeedmentException;
import com.speedment.internal.core.code.AbstractBaseEntity;
import edu.upc.as.data.speedment.showscom.public_.entrada.Entrada;
import edu.upc.as.data.speedment.showscom.public_.representacio.Representacio;
import edu.upc.as.data.speedment.showscom.public_.seient_en_representacio.SeientEnRepresentacio;

import javax.annotation.Generated;
import java.sql.Date;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.stream.Stream;

/**
 * An implementation representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@3c4464bf.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public final class EntradaImpl extends AbstractBaseEntity<Entrada> implements Entrada {
    
    private String dniclient;
    private Integer nombreespectadors;
    private Date data;
    private Float preu;
    private String sessio;
    private String nomlocal;
    private Integer identificador;
    
    EntradaImpl(Speedment speedment) {
        super(speedment);
    }
    
    public EntradaImpl(Speedment speedment, final Entrada entrada) {
        super(speedment);
        setDniclient(entrada.getDniclient());
        setNombreespectadors(entrada.getNombreespectadors());
        setData(entrada.getData());
        setPreu(entrada.getPreu());
        setSessio(entrada.getSessio());
        setNomlocal(entrada.getNomlocal());
        setIdentificador(entrada.getIdentificador());
    }
    
    @Override
    public String getDniclient() {
        return dniclient;
    }
    
    @Override
    public final EntradaImpl setDniclient(String dniclient) {
        this.dniclient = dniclient;
        return this;
    }
    
    @Override
    public Integer getNombreespectadors() {
        return nombreespectadors;
    }
    
    @Override
    public final EntradaImpl setNombreespectadors(Integer nombreespectadors) {
        this.nombreespectadors = nombreespectadors;
        return this;
    }
    
    @Override
    public Date getData() {
        return data;
    }
    
    @Override
    public final EntradaImpl setData(Date data) {
        this.data = data;
        return this;
    }
    
    @Override
    public Float getPreu() {
        return preu;
    }
    
    @Override
    public final EntradaImpl setPreu(Float preu) {
        this.preu = preu;
        return this;
    }
    
    @Override
    public String getSessio() {
        return sessio;
    }
    
    @Override
    public final EntradaImpl setSessio(String sessio) {
        this.sessio = sessio;
        return this;
    }
    
    @Override
    public String getNomlocal() {
        return nomlocal;
    }
    
    @Override
    public final EntradaImpl setNomlocal(String nomlocal) {
        this.nomlocal = nomlocal;
        return this;
    }
    
    @Override
    public Integer getIdentificador() {
        return identificador;
    }
    
    @Override
    public final EntradaImpl setIdentificador(Integer identificador) {
        this.identificador = identificador;
        return this;
    }
    
    @Override
    public Representacio findRepresentacio() {
        return managerOf_(Representacio.class).stream().filter(Representacio.SESSIO.equal(getSessio())).findFirst()
            .orElseThrow(() -> new SpeedmentException(
                    "Foreign key constraint error. Representacio is set to " + getSessio()
            ));
            
    }
    
    @Override
    public Stream<SeientEnRepresentacio> findSeientEnRepresentaciosByIdentificadorentrada() {
        return managerOf_(SeientEnRepresentacio.class)
                .stream().filter(SeientEnRepresentacio.IDENTIFICADORENTRADA.equal(this.getIdentificador()));
    }
    
    @Override
    public Stream<SeientEnRepresentacio> findSeientEnRepresentacios() {
        return findSeientEnRepresentaciosByIdentificadorentrada();
    }

    @Override
    public void setRepresentacioISeients(Representacio r, List<SeientEnRepresentacio> seientsEnR) {
        setSessio(r.getSessio());
        setNomlocal(r.getNomlocal());
        findSeientEnRepresentacios();

        r.ocupa(seientsEnRepresentacio.size());
        for (edu.upc.as.domain.model.SeientEnRepresentacio s : seientsEnRepresentacio) {
            s.ocupa();
        }
    }

    @Override
    public Entrada copy() {
        return new EntradaImpl(getSpeedment_(), this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("dniclient = "+Objects.toString(getDniclient()));
        sj.add("nombreespectadors = "+Objects.toString(getNombreespectadors()));
        sj.add("data = "+Objects.toString(getData()));
        sj.add("preu = "+Objects.toString(getPreu()));
        sj.add("sessio = "+Objects.toString(getSessio()));
        sj.add("nomlocal = "+Objects.toString(getNomlocal()));
        sj.add("identificador = "+Objects.toString(getIdentificador()));
        return "EntradaImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Entrada)) { return false; }
        @SuppressWarnings("unchecked")
        final Entrada thatEntrada = (Entrada)that;
        if (!Objects.equals(this.getDniclient(), thatEntrada.getDniclient())) {return false; }
        if (!Objects.equals(this.getNombreespectadors(), thatEntrada.getNombreespectadors())) {return false; }
        if (!Objects.equals(this.getData(), thatEntrada.getData())) {return false; }
        if (!Objects.equals(this.getPreu(), thatEntrada.getPreu())) {return false; }
        if (!Objects.equals(this.getSessio(), thatEntrada.getSessio())) {return false; }
        if (!Objects.equals(this.getNomlocal(), thatEntrada.getNomlocal())) {return false; }
        if (!Objects.equals(this.getIdentificador(), thatEntrada.getIdentificador())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getDniclient());
        hash = 31 * hash + Objects.hashCode(getNombreespectadors());
        hash = 31 * hash + Objects.hashCode(getData());
        hash = 31 * hash + Objects.hashCode(getPreu());
        hash = 31 * hash + Objects.hashCode(getSessio());
        hash = 31 * hash + Objects.hashCode(getNomlocal());
        hash = 31 * hash + Objects.hashCode(getIdentificador());
        return hash;
    }
    
    @Override
    public Class<Entrada> getEntityClass_() {
        return Entrada.class;
    }
}