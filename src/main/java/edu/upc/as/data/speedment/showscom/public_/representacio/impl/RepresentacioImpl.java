package edu.upc.as.data.speedment.showscom.public_.representacio.impl;

import com.speedment.Speedment;
import com.speedment.exception.SpeedmentException;
import com.speedment.internal.core.code.AbstractBaseEntity;
import edu.upc.as.data.speedment.showscom.public_.estrena.Estrena;
import edu.upc.as.data.speedment.showscom.public_.representacio.Representacio;
import edu.upc.as.data.speedment.showscom.public_.seient_en_representacio.SeientEnRepresentacio;

import javax.annotation.Generated;
import java.sql.Date;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.stream.Stream;

/**
 * An implementation representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@503b857e.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public final class RepresentacioImpl extends AbstractBaseEntity<Representacio> implements Representacio {
    
    private String titolespectacle;
    private String sessio;
    private String nomlocal;
    private Float preu;
    private Date data;
    private Integer nombreseienslliures;
    
    RepresentacioImpl(Speedment speedment) {
        super(speedment);
    }
    
    public RepresentacioImpl(Speedment speedment, final Representacio representacio) {
        super(speedment);
        setTitolespectacle(representacio.getTitolespectacle());
        setSessio(representacio.getSessio());
        setNomlocal(representacio.getNomlocal());
        setPreu(representacio.getPreu());
        setData(representacio.getData());
        setNombreseienslliures(representacio.getNombreseienslliures());
    }
    
    @Override
    public String getTitolespectacle() {
        return titolespectacle;
    }
    
    @Override
    public final RepresentacioImpl setTitolespectacle(String titolespectacle) {
        this.titolespectacle = titolespectacle;
        return this;
    }
    
    @Override
    public String getSessio() {
        return sessio;
    }
    
    @Override
    public final RepresentacioImpl setSessio(String sessio) {
        this.sessio = sessio;
        return this;
    }
    
    @Override
    public String getNomlocal() {
        return nomlocal;
    }
    
    @Override
    public final RepresentacioImpl setNomlocal(String nomlocal) {
        this.nomlocal = nomlocal;
        return this;
    }
    
    @Override
    public Float getPreu() {
        return preu;
    }
    
    @Override
    public final RepresentacioImpl setPreu(Float preu) {
        this.preu = preu;
        return this;
    }
    
    @Override
    public Date getData() {
        return data;
    }
    
    @Override
    public final RepresentacioImpl setData(Date data) {
        this.data = data;
        return this;
    }
    
    @Override
    public Integer getNombreseienslliures() {
        return nombreseienslliures;
    }
    
    @Override
    public final RepresentacioImpl setNombreseienslliures(Integer nombreseienslliures) {
        this.nombreseienslliures = nombreseienslliures;
        return this;
    }
    
    @Override
    public Stream<SeientEnRepresentacio> findSeientEnRepresentaciosBySessio() {
        return managerOf_(SeientEnRepresentacio.class)
                .stream().filter(SeientEnRepresentacio.SESSIO.equal(this.getSessio()));
    }
    
    @Override
    public Stream<SeientEnRepresentacio> findSeientEnRepresentacios() {
        return findSeientEnRepresentaciosBySessio();
    }

    @Override
    public Estrena findEstrenas() {
        return managerOf_(Estrena.class).stream()
                .filter((estrena -> estrena.getNomlocal().equals(getNomlocal()) && estrena.getSessio().equals(getSessio())))
                .findFirst().orElseThrow(
                        () -> new SpeedmentException(
                                "Foreign key constraint error. "
                        )
                );
    }


    @Override
    public Representacio copy() {
        return new RepresentacioImpl(getSpeedment_(), this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("titolespectacle = "+Objects.toString(getTitolespectacle()));
        sj.add("sessio = "+Objects.toString(getSessio()));
        sj.add("nomlocal = "+Objects.toString(getNomlocal()));
        sj.add("preu = "+Objects.toString(getPreu()));
        sj.add("data = "+Objects.toString(getData()));
        sj.add("nombreseienslliures = "+Objects.toString(getNombreseienslliures()));
        return "RepresentacioImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Representacio)) { return false; }
        @SuppressWarnings("unchecked")
        final Representacio thatRepresentacio = (Representacio)that;
        if (!Objects.equals(this.getTitolespectacle(), thatRepresentacio.getTitolespectacle())) {return false; }
        if (!Objects.equals(this.getSessio(), thatRepresentacio.getSessio())) {return false; }
        if (!Objects.equals(this.getNomlocal(), thatRepresentacio.getNomlocal())) {return false; }
        if (!Objects.equals(this.getPreu(), thatRepresentacio.getPreu())) {return false; }
        if (!Objects.equals(this.getData(), thatRepresentacio.getData())) {return false; }
        if (!Objects.equals(this.getNombreseienslliures(), thatRepresentacio.getNombreseienslliures())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getTitolespectacle());
        hash = 31 * hash + Objects.hashCode(getSessio());
        hash = 31 * hash + Objects.hashCode(getNomlocal());
        hash = 31 * hash + Objects.hashCode(getPreu());
        hash = 31 * hash + Objects.hashCode(getData());
        hash = 31 * hash + Objects.hashCode(getNombreseienslliures());
        return hash;
    }
    
    @Override
    public Class<Representacio> getEntityClass_() {
        return Representacio.class;
    }
}