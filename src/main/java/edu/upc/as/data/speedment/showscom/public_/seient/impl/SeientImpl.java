package edu.upc.as.data.speedment.showscom.public_.seient.impl;

import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import edu.upc.as.data.speedment.showscom.public_.seient.Seient;
import edu.upc.as.data.speedment.showscom.public_.seient_en_representacio.SeientEnRepresentacio;

import javax.annotation.Generated;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.stream.Stream;

/**
 * An implementation representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@d701cb4.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public final class SeientImpl extends AbstractBaseEntity<Seient> implements Seient {
    
    private Integer fila;
    private Integer columna;
    private String nomlocal;
    
    SeientImpl(Speedment speedment) {
        super(speedment);
    }
    
    public SeientImpl(Speedment speedment, final Seient seient) {
        super(speedment);
        setFila(seient.getFila());
        setColumna(seient.getColumna());
        setNomlocal(seient.getNomlocal());
    }
    
    @Override
    public Integer getFila() {
        return fila;
    }
    
    @Override
    public final SeientImpl setFila(Integer fila) {
        this.fila = fila;
        return this;
    }
    
    @Override
    public Integer getColumna() {
        return columna;
    }
    
    @Override
    public final SeientImpl setColumna(Integer columna) {
        this.columna = columna;
        return this;
    }
    
    @Override
    public String getNomlocal() {
        return nomlocal;
    }
    
    @Override
    public final SeientImpl setNomlocal(String nomlocal) {
        this.nomlocal = nomlocal;
        return this;
    }
    
    @Override
    public Stream<SeientEnRepresentacio> findSeientEnRepresentaciosByFila() {
        return managerOf_(SeientEnRepresentacio.class)
                .stream().filter(SeientEnRepresentacio.FILA.equal(this.getFila()));
    }
    
    @Override
    public Stream<SeientEnRepresentacio> findSeientEnRepresentacios() {
        return findSeientEnRepresentaciosByFila();
    }
    
    @Override
    public Seient copy() {
        return new SeientImpl(getSpeedment_(), this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("fila = "+Objects.toString(getFila()));
        sj.add("columna = "+Objects.toString(getColumna()));
        sj.add("nomlocal = "+Objects.toString(getNomlocal()));
        return "SeientImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Seient)) { return false; }
        @SuppressWarnings("unchecked")
        final Seient thatSeient = (Seient)that;
        if (!Objects.equals(this.getFila(), thatSeient.getFila())) {return false; }
        if (!Objects.equals(this.getColumna(), thatSeient.getColumna())) {return false; }
        if (!Objects.equals(this.getNomlocal(), thatSeient.getNomlocal())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getFila());
        hash = 31 * hash + Objects.hashCode(getColumna());
        hash = 31 * hash + Objects.hashCode(getNomlocal());
        return hash;
    }
    
    @Override
    public Class<Seient> getEntityClass_() {
        return Seient.class;
    }
}